name: Docker Image CI

on:
  pull_request:
    branches: [ production ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: GITHUB_WORKSPACE
        run: echo "$GITHUB_WORKSPACE"
      - name: Create .env
        uses: DeveloperRic/action-create-env@v1.0.2
        with:
          full_text: |
            ENVIRONMENT=local
            SECRET_KEY=${{ secrets.SECRET_KEY }}
            DEBUG=${{ secrets.DEBUG }}
            DB_NAME=postgres
            DB_USER=postgres
            DB_HOST=db
            DB_PASSWORD=postgres
            DB_PORT=5432
            EMAIL_USER=${{ secrets.EMAIL_USER }}
            EMAIL_HOST=${{ secrets.EMAIL_HOST }}
            EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }}
            EMAIL_PORT=${{ secrets.EMAIL_PORT }}
            FE_URL=${{ secrets.FE_URL }}
            AWS_S3_ACCESS_KEY_ID=${{ secrets.AWS_S3_ACCESS_KEY_ID }}
            AWS_S3_SECRET_ACCESS_KEY=${{ secrets.AWS_S3_SECRET_ACCESS_KEY }}
            AWS_STORAGE_BUCKET_NAME=${{ secrets.AWS_STORAGE_BUCKET_NAME }}
            GOOGLE_APPLICATION_CREDENTIALS=${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          directory: ${{ github.workspace }}/backend
      - name: Create google_key.json
        uses: jsdaniell/create-json@v1.2.3
        id: create-json
        with:
          name: google_key.json
          json: ${{ secrets.GOOGLE_CREDENTIALS_JSON }}
          dir: backend/
      - name: Build the Docker image
        run: docker logout && docker compose up --build -d
      - name: run Tests
        run: docker compose run --rm backend sh -c "python3 ./manage.py test"
      - name: Stop containers
        if: always()
        run: docker compose down